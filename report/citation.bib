@inproceedings{kahl2022overview,
  title={Overview of BirdCLEF 2022: Endangered bird species recognition in soundscape recordings},
  author={Kahl, Stefan and Navine, Amanda and Denton, Tom and Klinck, Holger and Hart, Patrick and Glotin, Herv{\'e} and Go{\"e}au, Herv{\'e} and Vellinga, Willem-Pier and Planqu{\'e}, Robert and Joly, Alexis},
  booktitle={Proceedings of the Working Notes of CLEF 2022-Conference and Labs of the Evaluation Forum},
  year={2022}
}

@article{duncan2019developing,
  title={Developing a Cancer Atlas Using Bayesian Methods: A Practical Guide for Application and Interpretation},
  author={Duncan, EW and Cramb, SM and Baade, PD and Mengersen, KL and Saunders, T and Aitken, JF},
  year={2019},
  publisher={Queensland University of Technology (QUT) and Cancer Council Queensland~…}
}

@misc{pymc_multilevel_primer,
	title = {A {Primer} on {Bayesian} {Methods} for {Multilevel} {Modeling} — {PyMC3} 3.11.5 documentation},
	url = {https://docs.pymc.io/en/v3/pymc-examples/examples/case_studies/multilevel_modeling.html},
	urldate = {2022-12-01},
	file = {A Primer on Bayesian Methods for Multilevel Modeling — PyMC3 3.11.5 documentation:C\:\\Users\\acmiy\\Zotero\\storage\\E4NHU4VU\\multilevel_modeling.html:text/html},
}

@article{lee_carbayes_nodate,
	title = {{CARBayes} version 5.3: {An} {R} package for spatial areal unit modelling with conditional autoregressive priors},
	abstract = {This is a vignette for the R package CARBayes version 5.3, and is an updated version of a paper in the Journal of Statistical Software in 2013 Volume 55 Issue 13 by the same author. The package implements univariate and multivariate spatial generalised linear mixed models for areal unit data, with inference in a Bayesian setting using Markov chain Monte Carlo (MCMC) simulation. The response variable can be binomial, Gaussian, multinomial, Poisson or zero-inﬂated Poisson (ZIP), and spatial autocorrelation is modelled by a set of random eﬀects that are assigned a conditional autoregressive (CAR) prior distribution. A number of diﬀerent models are available for univariate spatial data, including models with no random eﬀects as well as random eﬀects modelled by diﬀerent types of CAR prior. Additionally, a multivariate CAR (MCAR) model for multivariate spatial data is available, as is a two-level hierarchical model for modelling data relating to individuals within areas. The initial creation of this package was supported by the Economic and Social Research Council (ESRC) grant RES-000-22-4256, and on-going development has been supported by the Engineering and Physical Science Research Council (EPSRC) grant EP/J017442/1, ESRC grant ES/K006460/1, Innovate UK / Natural Environment Research Council (NERC) grant NE/N007352/1, and the TB Alliance.},
	language = {en},
	author = {Lee, Duncan},
	pages = {33},
	file = {Lee - CARBayes version 5.3 An R package for spatial are.pdf:C\:\\Users\\acmiy\\Zotero\\storage\\3KT2WX4H\\Lee - CARBayes version 5.3 An R package for spatial are.pdf:application/pdf},
}

@misc{gpwv4,
	title = {Gridded {Population} of the {World}, {Version} 4 ({GPWv4}): {Population} {Density}},
	copyright = {This work is licensed under the Creative Commons Attribution 4.0 International License (https://creativecommons.org/licenses/by/4.0). Users are free to use, copy, distribute, transmit, and adapt the work for commercial and non-commercial purposes, without restriction, as long as clear attribution of the source is provided.},
	shorttitle = {Gridded {Population} of the {World}, {Version} 4 ({GPWv4})},
	url = {http://beta.sedac.ciesin.columbia.edu/data/set/gpw-v4-population-density},
	abstract = {The Gridded Population of the World, Version 4 (GPWv4) Population Density consists of estimates of human population density based on counts consistent with national censuses and population registers, for the years 2000, 2005, 2010, 2015, and 2020. A proportional allocation gridding algorithm, utilizing approximately 12.5 million national and sub-national administrative units, is used to assign population values to 30 arc-second ({\textasciitilde}1 km) grid cells. The population density grids are derived by dividing the population count grids by the land area grids. The pixel values represent persons per square kilometer.},
	urldate = {2022-12-01},
	publisher = {Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC)},
	author = {Center For International Earth Science Information Network-CIESIN-Columbia University},
	year = {2016},
	doi = {10.7927/H4NP22DQ},
	note = {Type: dataset},
	keywords = {population},
}

@misc{nasa_srtmg,
	title = {{NASA} {Shuttle} {Radar} {Topography} {Mission} {Global} 1 arc second},
	url = {https://lpdaac.usgs.gov/products/srtmgl1v003/},
	urldate = {2022-12-01},
	publisher = {NASA EOSDIS Land Processes DAAC},
	author = {NASA JPL},
	year = {2013},
	doi = {10.5067/MEASURES/SRTM/SRTMGL1.003},
	note = {Type: dataset},
}

@misc{wan_zhengming_mod11a1_2015,
	title = {{MOD11A1} {MODIS}/{Terra} {Land} {Surface} {Temperature}/{Emissivity} {Daily} {L3} {Global} 1km {SIN} {Grid} {V006}},
	url = {https://lpdaac.usgs.gov/products/mod11a1v006/},
	urldate = {2022-12-01},
	publisher = {NASA EOSDIS Land Processes DAAC},
	author = {Wan,  Zhengming and Hook,  Simon and Hulley,  Glynn},
	year = {2015},
	doi = {10.5067/MODIS/MOD11A1.006},
	note = {Type: dataset},
}

@misc{friedl_mark_mcd12q1_2019,
	title = {{MCD12Q1} {MODIS}/{Terra}+{Aqua} {Land} {Cover} {Type} {Yearly} {L3} {Global} 500m {SIN} {Grid} {V006}},
	url = {https://lpdaac.usgs.gov/products/mcd12q1v006/},
	urldate = {2022-12-01},
	publisher = {NASA EOSDIS Land Processes DAAC},
	author = {Friedl,  Mark and Sulla-Menashe,  Damien},
	year = {2019},
	doi = {10.5067/MODIS/MCD12Q1.006},
	note = {Type: dataset},
}

@article{gorelick_google_2017,
	series = {Big {Remotely} {Sensed} {Data}: tools, applications and experiences},
	title = {Google {Earth} {Engine}: {Planetary}-scale geospatial analysis for everyone},
	volume = {202},
	issn = {0034-4257},
	shorttitle = {Google {Earth} {Engine}},
	url = {https://www.sciencedirect.com/science/article/pii/S0034425717302900},
	doi = {10.1016/j.rse.2017.06.031},
	abstract = {Google Earth Engine is a cloud-based platform for planetary-scale geospatial analysis that brings Google's massive computational capabilities to bear on a variety of high-impact societal issues including deforestation, drought, disaster, disease, food security, water management, climate monitoring and environmental protection. It is unique in the field as an integrated platform designed to empower not only traditional remote sensing scientists, but also a much wider audience that lacks the technical capacity needed to utilize traditional supercomputers or large-scale commodity cloud computing resources.},
	language = {en},
	urldate = {2022-12-01},
	journal = {Remote Sensing of Environment},
	author = {Gorelick, Noel and Hancher, Matt and Dixon, Mike and Ilyushchenko, Simon and Thau, David and Moore, Rebecca},
	month = dec,
	year = {2017},
	keywords = {Analysis, Big data, Cloud computing, Data democratization, Earth Engine, Platform},
	pages = {18--27},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\acmiy\\Zotero\\storage\\79AJGJ83\\Gorelick et al. - 2017 - Google Earth Engine Planetary-scale geospatial an.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\acmiy\\Zotero\\storage\\EWNZ5KK7\\S0034425717302900.html:text/html},
}

@misc{google_ee_intro,
	title = {An {Intro} to the {Earth} {Engine} {Python} {API}  {\textbar}  {Google} {Earth} {Engine}  {\textbar}  {Google} {Developers}},
	url = {https://developers.google.com/earth-engine/tutorials/community/intro-to-python-api#acknowledgements},
	urldate = {2022-12-01},
	file = {An Intro to the Earth Engine Python API  |  Google Earth Engine  |  Google Developers:C\:\\Users\\acmiy\\Zotero\\storage\\V5SUFM8H\\intro-to-python-api.html:text/html},
}

@article{salvatier_probabilistic_2016,
	title = {Probabilistic programming in {Python} using {PyMC3}},
	volume = {2},
	issn = {2376-5992},
	url = {https://peerj.com/articles/cs-55},
	doi = {10.7717/peerj-cs.55},
	abstract = {Probabilistic programming allows for automatic Bayesian inference on user-defined probabilistic models. Recent advances in Markov chain Monte Carlo (MCMC) sampling allow inference on increasingly complex models. This class of MCMC, known as Hamiltonian Monte Carlo, requires gradient information which is often not readily available. PyMC3 is a new open source probabilistic programming framework written in Python that uses Theano to compute gradients via automatic differentiation as well as compile probabilistic programs on-the-fly to C for increased speed. Contrary to other probabilistic programming languages, PyMC3 allows model specification directly in Python code. The lack of a domain specific language allows for great flexibility and direct interaction with the model. This paper is a tutorial-style introduction to this software package.},
	language = {en},
	urldate = {2022-12-01},
	journal = {PeerJ Computer Science},
	author = {Salvatier, John and Wiecki, Thomas V. and Fonnesbeck, Christopher},
	month = apr,
	year = {2016},
	note = {Publisher: PeerJ Inc.},
	pages = {e55},
	file = {Full Text PDF:C\:\\Users\\acmiy\\Zotero\\storage\\VHUCKQP7\\Salvatier et al. - 2016 - Probabilistic programming in Python using PyMC3.pdf:application/pdf},
}

@article{kumar_arviz_2019,
	title = {{ArviZ} a unified library for exploratory analysis of {Bayesian} models in {Python}},
	volume = {4},
	issn = {2475-9066},
	url = {http://joss.theoj.org/papers/10.21105/joss.01143},
	doi = {10.21105/joss.01143},
	number = {33},
	urldate = {2022-12-01},
	journal = {Journal of Open Source Software},
	author = {Kumar, Ravin and Carroll, Colin and Hartikainen, Ari and Martin, Osvaldo},
	month = jan,
	year = {2019},
	pages = {1143},
	file = {Full Text:C\:\\Users\\acmiy\\Zotero\\storage\\TKB9VV3E\\Kumar et al. - 2019 - ArviZ a unified library for exploratory analysis o.pdf:application/pdf},
}
